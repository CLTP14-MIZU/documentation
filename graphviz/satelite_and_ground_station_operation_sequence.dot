digraph SatelliteOperation {
    rankdir = TB;
    splines = ortho;
    nodesep = 0.6;
    ranksep = 0.8;
    ranksep=0.1; nodesep=0.1;
    node [fontname = "Helvetica"; fontsize = 10; shape = box; style = rounded;];
    
    // Ground Station lane (left vertical)
    subgraph cluster_ground {
        label = "Ground station";
        style = dashed;
        color = grey;
        
        AOS [shape = diamond;label = "AOS?";];
        ReceiveHK [label = "Receive HK data";];
        Condition [shape = diamond;label = "Satellite condition";];
        UplinkCmd [label = "Uplink command";];
        ReceiveAck [label = "Receive ACK";];
        AckCheck [shape = diamond;label = "Receive ACK?";];
        ReceiveMission [label = "Receive mission data";];
        DisplayMission [label = "Display mission data";];
        LOS [shape = diamond;label = "LOS?";];
        End [shape = ellipse;label = "END";];
    }
    
    // Satellite lane (right vertical)
    subgraph cluster_satellite {
        label = "Satellite";
        style = dashed;
        color = grey;
        
        Start [shape = ellipse;label = "START";];
        TurnOn [label = "Turn on satellite";];
        AcquireHK [label = "Acquire HK data";];
        DownlinkHK [label = "Downlink HK data";];
        ReceiveCmd [label = "Receive command";];
        CmdCheck [shape = diamond;label = "Receive command?";];
        ReturnAck [label = "Return ACK";];
        CommandCheck [shape = diamond;label = "Command check";];
        AcquireMission [label = "Acquire mission data";];
        DownlinkMission [label = "Downlink mission data";];
    }
    
    // Flows inside Satellite
    Start -> TurnOn -> AcquireHK -> DownlinkHK -> ReceiveCmd -> CmdCheck;
    CmdCheck -> ReturnAck [label = "Yes";];
    CmdCheck -> DownlinkMission [label = "No";];
    ReturnAck -> CommandCheck;
    CommandCheck -> AcquireMission [label = "Yes";];
    CommandCheck -> DownlinkMission [label = "No";];
    AcquireMission -> DownlinkMission;
    
    // Flows inside Ground Station
    AOS -> ReceiveHK [label = "Yes";];
    AOS -> LOS [label = "No";];
    ReceiveHK -> Condition -> UplinkCmd -> ReceiveAck -> AckCheck;
    AckCheck -> AcquireMission [label = "Yes";];
    AckCheck -> UplinkCmd [label = "No";];
    ReceiveMission -> DisplayMission -> LOS;
    LOS -> End [label = "Yes";];
    LOS -> AOS [label = "No";];
    
    // Cross-lane communications
    DownlinkHK -> ReceiveHK;
    DownlinkMission -> ReceiveMission;
    UplinkCmd -> ReceiveCmd;
    ReceiveAck -> ReturnAck;
}